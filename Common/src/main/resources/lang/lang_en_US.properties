version = 2.0

command_desc.help = Gets help for the plugin and/or its various commands.
command_desc.reload = Reloads the plugin.
command_desc.import = Imports data from one storage engine to another.
command_desc.kick = Kicks a player for VPN or MCLeaks usage using the plugin configuration.
command_desc.check = Check an IP or player using the default system. This will return exactly the same value as any other API call.
command_desc.score = Scores a particular source based on a pre-made list of known good and bad IPs. Note that this forces a check so will use credits every time it's run.;
command_desc.test = Test an IP through the various (enabled) services. Note that this forces a check so will use credits every time it's run.

banner.use_paper = \
  \n+ -------------------------------- +\
  \n|  Anti-VPN runs better on Paper!  |\
  \n|     https://whypaper.emc.gs/     |\
  \n+ -------------------------------- +

banner.pre_18 = \
  \n+ ------------------------------------------------ +\
  \n|                     NOTICE                       |\
  \n|  Anti-VPN will likely not work on servers < 1.8  |\
  \n+ ------------------------------------------------ +

banner.in_18 = \
  \n+ ------------------------------------------------------ +\
  \n|            DEAR LORD why are you on 1.8???             |\
  \n|  Have you tried ViaVersion or ProtocolSupport lately?  |\
  \n+ ------------------------------------------------------ +

general.decorator = <yellow>[</yellow><aqua>Anti-VPN</aqua><yellow>] </yellow>
general.enable_message = <green>Enabled</green>
general.disable_message = <red>Disabled</red>
general.load_message = \
  <yellow>[</yellow><aqua>Version</aqua> {version}<yellow>] \
  [</yellow><aqua>API Version</aqua> {apiversion}<yellow>] \
  [</yellow>{commands} <gold>Commands</gold><yellow>] \
  [</yellow>{events} <blue>Events</blue><yellow>] \
  [</yellow>{tasks} <gray>Tasks</gray><yellow>]</yellow>
general.enable_hook = <green>Enabling support for</green> {hook}
general.no_hook = {hook} <yellow>was not found. Support for it has been disabled.</yellow>
general.update_found = <aqua>has an</aqua> <green>update</green> <aqua>available!</aqua> New version: <yellow>{version}</yellow>
general.async_actions = <yellow>Running actions on async pre-login.</yellow>
general.sync_actions = <red>Running actions on sync login.</red>

error.internal = <dark_red>Sorry, an internal error occurred. Check your console for more information.</dark_red>
error.command_manager = Could not create the Cloud command manager.
error.no_config = Config could not be fetched.
error.no_cached_config = Cached config could not be fetched.
error.bad_id = id cannot be <= 0.
error.api_exception = [Hard: {hard}] {message}
error.no_inet = Could not create InetAddress for {ip}

error.lang.no_locale = Locale {lang} was not found. Using default United States locale.
error.lang.no_console = Console command sender should not be null.
error.lang.no_backup_bundle = Resource bundle for backup locale {lang} was not found.
error.lang.no_locale_text = Could not get locale {lang} text for key "{key}".
error.lang.no_backup_text = Could not get backup locale {lang} text for key "{key}".

error.config.no_engine = Could not create engine {name}.

error.messaging.bad_packet = Could not instantiate packet {name}.
error.messaging.no_bind = Could not re-bind channel.
error.messaging.bad_handle = Could not handle message.

error.command.invalid_syntax = <dark_red>Invalid command syntax: {ex}</dark_red>
error.command.invalid_sender = <dark_red>Sorry, You are not allowed to perform this action: {ex}</dark_red>
error.command.no_permission = <dark_red>Sorry, you do not have permissions to run this command: {ex}</dark_red>
error.command.invalid_args = <dark_red>Could not parse command arguments: {ex}</dark_red>

api.decorator = [Anti-VPN API]
api.event_error = {decorator} {message}
api.no_report = {decorator} The above error is from a different plugin. PLEASE DO NOT REPORT THIS TO ANTI-VPN.

hook.luckperms.cached = <yellow>LuckPerms UUID</yellow> {uuid} <yellow>is previously loaded, using cached data..</yellow>
hook.luckperms.uncached = <yellow>LuckPerms UUID</yellow> {uuid} <yellow>is not loaded, forcing data load..</yellow>

hook.plan.not_installed = Plan is not installed.
hook.plan.not_enabled = Plan is not enabled.
hook.plan.data_exception = DataExtension implementation exception.
hook.plan.timeout = Plan hook timed out before all results could be obtained.

hook.vault.found = <yellow>Found Vault permissions provider.</yellow>
hook.vault.not_found = <red>Could not find Vault permissions provider.</red>
hook.vault.null_provider = <yellow>Returning null Vault permissions provider.</yellow>

debug.not_whitelisted = {name} ({uuid}) <yellow>is not whitelisted while the server is in whitelist mode. Ignoring.</yellow>
debug.bypass_check = {name} ({uuid}) <yellow>bypasses checks. Ignoring.</yellow>
debug.ignored_ip = {name} ({uuid}) <yellow>is using an ignored IP</yellow> ({ip})<yellow>. Ignoring.</yellow>
debug.ignored_range = {name} ({uuid}) <yellow>is under an ignored IP range</yellow> ({ip} under {range})<yellow>. Ignoring.</yellow>
debug.vpn_detected = {name} ({uuid}) <red>was found using a VPN</red> ({ip})<red>. Running required actions.</red>
debug.vpn_passed = {name} ({uuid}) <green>passed VPN checks with IP</green> ({ip})<green>.</green>
debug.vpn_api_only = <yellow>VPN detection set to API-only. Ignoring VPN check for</yellow> {name} ({uuid})
debug.mcleaks_detected = {name} ({uuid}) <red>was found using an MCLeaks account. Running required actions.</red>
debug.mcleaks_passed = {name} ({uuid}) <green>passed MCLeaks checks.</green>
debug.mcleaks_api_only = <yellow>MCLeaks detection set to API-only. Ignoring MCLeaks check for</yellow> {name} ({uuid})

command.import.error.same_storage = <dark_red>The specified master and slave are the same!</dark_red>
command.import.error.no_master = <dark_red>The specified master storage was not found.</dark_red>
command.import.error.no_slave = <dark_red>The specified slave storage was not found.</dark_red>
command.import.begin = <yellow>Importing data, please wait..</yellow>
command.import.end = <green>Data successfully imported!</green>
command.import.import_ip = <yellow>Importing IPs..</yellow> <gray>[</gray><yellow>ID:</yellow> <aqua>{id}</aqua><gray>]</gray>
command.import.import_player = <yellow>Importing players..</yellow> <gray>[</gray><yellow>ID:</yellow> <aqua>{id}</aqua><gray>]</gray>

command.kick.error.api_mode = <dark_red>The plugin is in API mode, and no actions have been performed.</dark_red>
command.kick.error.not_online = <dark_red>The specified player was not online.</dark_red>
command.kick.vpn_usage = <green>Player</green> {player} <green>has been kicked for VPN usage, and/or all necessary commands have been run.</green>
command.kick.mcleaks_usage = <green>Player</green> {player} <green>has been kicked for MCLeaks usage, and/or and all necessary commands have been run.</green>

command.check.begin = <yellow>Checking</yellow> {type}<yellow>, please wait..</yellow>
command.check.yes_vpn = <red>VPN/proxy detected</red>
command.check.no_vpn = <green>No VPN/proxy detected</green>
command.check.yes_mcleaks = <red>MCLeaks account detected</red>
command.check.no_mcleaks = <green>No MCLeaks account detected</green>

command.score.begin = <yellow>Scoring</yellow> {source}<yellow>, please wait..</yellow>
command.score.end = <green>Scoring for</green> {source} <green>complete!</green>
command.score.begin_type = <yellow>Scoring against</yellow> {type}<yellow>..</yellow>
command.score.sleeping = <yellow>Sleeping for one minute..</yellow>
command.score.error_rate = [{source}] {type} <red>error</red> {percent}%
command.score.result = [{source}] {type} <yellow>score</yellow> {percent}%

command.test.begin = <yellow>Testing with</yellow> {ip}<yellow>, please wait..</yellow>
command.test.end = <green>Test for</green> {ip} <green>complete!</green>
command.test.source_error = [{source}] <yellow>error</yellow>
command.test.yes_vpn = [{source}] <red>VPN/proxy detected</red>
command.test.no_vpn = [{source}] <green>No VPN/proxy detected</green>

command.reload.begin = <yellow>Reloading, please wait..</yellow>
command.reload.end = <green>Configuration reloaded!</green>